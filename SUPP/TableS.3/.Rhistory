model_fitting(fitting_prepare(res5,number_variables),"gaussian"),
model_fitting(fitting_prepare(res6,number_variables),"gaussian"),
model_fitting(fitting_prepare(res7,number_variables),"gaussian"),
model_fitting(fitting_prepare(res8,number_variables),"gaussian"),
model_fitting(fitting_prepare(res9,number_variables),"gaussian"),
model_fitting(fitting_prepare(res10,number_variables),"gaussian"))
cbind(
model_fitting(fitting_prepare(res1,number_variables),"weibull"),
model_fitting(fitting_prepare(res2,number_variables),"weibull"),
model_fitting(fitting_prepare(res3,number_variables),"weibull"),
model_fitting(fitting_prepare(res4,number_variables),"weibull"),
model_fitting(fitting_prepare(res5,number_variables),"weibull"),
model_fitting(fitting_prepare(res6,number_variables),"weibull"),
model_fitting(fitting_prepare(res7,number_variables),"weibull"),
model_fitting(fitting_prepare(res8,number_variables),"weibull"),
model_fitting(fitting_prepare(res9,number_variables),"weibull"),
model_fitting(fitting_prepare(res10,number_variables),"weibull"))
cbind(
model_fitting(fitting_prepare(res1,number_variables),"logistic"),
model_fitting(fitting_prepare(res2,number_variables),"logistic"),
model_fitting(fitting_prepare(res3,number_variables),"logistic"),
model_fitting(fitting_prepare(res4,number_variables),"logistic"),
model_fitting(fitting_prepare(res5,number_variables),"logistic"),
model_fitting(fitting_prepare(res6,number_variables),"logistic"),
model_fitting(fitting_prepare(res7,number_variables),"logistic"),
model_fitting(fitting_prepare(res8,number_variables),"logistic"),
model_fitting(fitting_prepare(res9,number_variables),"logistic"),
model_fitting(fitting_prepare(res10,number_variables),"logistic"))
score <- sapply(c(1:as.numeric(dim(s)[2])),screen_add,s=s)
res1 <- data.frame(screen=score)
mid <- 0.5*(l+r)
six <- 1/3*l + 2/3*r
third <- 2/3*l + 1/3*r
screen_ks<- function(i,y,s)
{
every = data.frame(cbind(y,as.vector(unlist(s[as.character(i)]))))
part1 = every[every$V2==0,c('y')]
part2 = every[every$V2==1,c('y')]
return (as.numeric(ks.test(part1,part2)$statistic))
}
screen_dc <- function(i,y,s)
{
return (dcor(y,as.vector(unlist(s[as.character(i)]))))}
Fk<-function(X0,x) {
Fk=c()
for (i in 1:length(x))
{ Fk[i]=sum(X0<=x[i])/length(X0) }
return(Fk)
}
Fkr<-function(X0,Y,yr,x) {
Fkr=c()
ind_yr=(Y==yr)
for (i in 1:length(x))
{ Fkr[i]=sum((X0<=x[i])*ind_yr)/sum(ind_yr) }
return(Fkr)
}
MV<-function(Xk,Y) {
Fk0 <- Fk(Xk,Xk)
Yr <- unique(Y)
MVr <- c()
for (r in 1:length(Yr)) {
MVr[r] <- (sum(Y==Yr[r])/length(Y))*mean((Fkr(Xk,Y,Yr[r],Xk)-Fk0)^2)
}
MV <- sum(MVr)
return(MV)
}
screen_mv <- function(i,s,y)
{return (abs(MV(Y=as.vector(unlist(s[as.character(i)])),Xk=y)))}
score2 = sapply(c(1:as.numeric(dim(s)[2])),screen_ks,y=mid,s=s)
res2 <- data.frame(screen=score2)
score3 = sapply(c(1:as.numeric(dim(s)[2])),screen_dc,y=mid,s=s)
res3 <- data.frame(screen=score3)
score4 = sapply(c(1:as.numeric(dim(s)[2])),screen_mv,y=mid,s=s)
res4 <- data.frame(screen=score4)
score5 = sapply(c(1:as.numeric(dim(s)[2])),screen_ks,y=third,s=s)
res5 <- data.frame(screen=score5)
score6 = sapply(c(1:as.numeric(dim(s)[2])),screen_dc,y=third,s=s)
res6 <- data.frame(screen=score6)
score7 = sapply(c(1:as.numeric(dim(s)[2])),screen_mv,y=third,s=s)
res7 <- data.frame(screen=score7)
score8 = sapply(c(1:as.numeric(dim(s)[2])),screen_ks,y=six,s=s)
res8 <- data.frame(screen=score8)
score9 = sapply(c(1:as.numeric(dim(s)[2])),screen_dc,y=six,s=s)
res9 <- data.frame(screen=score9)
score10 = sapply(c(1:as.numeric(dim(s)[2])),screen_mv,y=six,s=s)
res10 <- data.frame(screen=score10)
res_all <- as.data.frame(cbind(res1,res2,res3,res4,res5,res6,res7,res8,res9,res10))
dt
View(dt)
words = read.csv("UtilizedWords.csv")
dt <- read_csv("Web.csv")
REAL_TEST = dt
l = REAL_TEST$l
r =REAL_TEST$r
s = as.data.frame(subset(REAL_TEST, select = -c(l,r,Description) ))
plot(EMICM(cbind(l,r)))
lines(ecdf(c(l,r)),cex=0.5)
words = read.csv("UtilizedWords.csv")
rank(res1)
res1
res1$screen
rank(res1$screen)
length(res1) - rank(res1$screen)
length(res1$screen) - rank(res1$screen)
length(res1$screen)+1 - rank(res1$screen)
(length(res1$screen)+1 - rank(res1$screen))<20
words
(length(res1$screen)+1 - rank(res1$screen))<20
words$word[(length(res1$screen)+1 - rank(res1$screen))<20]
as.data.frame(words$word[(length(res1$screen)+1 - rank(res1$screen))<20])
unlist(words$word[(length(res1$screen)+1 - rank(res1$screen))<20])
typeof((words$word[(length(res1$screen)+1 - rank(res1$screen))<20]))
print ((words$word[(length(res1$screen)+1 - rank(res1$screen))<20]))
print ((words$word[(length(res1$screen)+1 - rank(res1$screen))<21]))
dt <- read_csv("Web.csv")
REAL_TEST = dt
l = REAL_TEST$l
r =REAL_TEST$r
s = as.data.frame(subset(REAL_TEST, select = -c(l,r,Description) ))
plot(EMICM(cbind(l,r)))
lines(ecdf(c(l,r)),cex=0.5)
words = read.csv("UtilizedWords.csv")
print ((words$word[(length(res1$screen)+1 - rank(res1$screen))<21]))
as.character((words$word[(length(res1$screen)+1 - rank(res1$screen))<21]))
fitting_prepare <- function(res,sub){
totno <- dim(s)[2]
ks <- data.frame(rank=totno-rank(res$screen),index=c(1:dim(s)[2]))
x <- as.matrix(s[,ks[ks$rank<sub+1,]$index])
data <- data.frame(l=l,r=r,sapply(c(1:dim(x)[2]),function(i) x[,i]))
return (data)
}
model_fitting <- function(data,dis) {
dt_tmp <- data[3:ncol(data)]
if (dis == "weibull"){
dt_tmp$l = data$l
dt_tmp$r = data$r
total <- dim(data)[2] - 2
xkk = paste("X", 1:total, sep = "",collapse="+")
model <- survreg(as.formula(paste("Surv(l,r,type='interval2')",
xkk,sep="~")),data=dt_tmp,dist=dis)
scsc <- model$loglik
ress <- c(scsc[2],2*(scsc[2]-scsc[1]))
}
else {
dt_tmp$l = log(data$l)
dt_tmp$r = log(data$r)
total <- dim(data)[2] - 3
xkk = paste("X", 1:total, sep = "",collapse="+")
model <- survreg(as.formula(paste("Surv(l,r,type='interval2')",
xkk,sep="~")),data=dt_tmp,dist=dis)
scsc <- model$loglik
ress <- c(scsc[2],2*(scsc[2]-scsc[1]))}
return (ress)
}
model_fittingtmp <- function(data,dis) {
dt_tmp <- data[3:ncol(data)]
if (dis == "weibull"){
dt_tmp$l = data$l
dt_tmp$r = data$r
total <- dim(data)[2] - 2
xkk = paste("X", 1:total, sep = "",collapse="+")
modell <- survreg(as.formula(paste("Surv(l,r,type='interval2')",
xkk,sep="~")),data=dt_tmp,dist=dis)
#scsc <- model$loglik
#ress <- c(scsc[2],2*(scsc[2]-scsc[1]))
}
else {
dt_tmp$l = log(data$l)
dt_tmp$r = log(data$r)
total <- dim(data)[2] - 3
xkk = paste("X", 1:total, sep = "",collapse="+")
modell <- survreg(as.formula(paste("Surv(l,r,type='interval2')",
xkk,sep="~")),data=dt_tmp,dist=dis)}
#scsc <- model$loglik
#ress <- c(scsc[2],2*(scsc[2]-scsc[1]))}}
return (modell)
}
#gr <- model_fittingtmp(fitting_prepare(res1,number_variables),"gaussian")
print ("gaussian")
number_variables =20
cbind(
model_fitting(fitting_prepare(res1,number_variables),"gaussian"),
model_fitting(fitting_prepare(res2,number_variables),"gaussian"),
model_fitting(fitting_prepare(res3,number_variables),"gaussian"),
model_fitting(fitting_prepare(res4,number_variables),"gaussian"),
model_fitting(fitting_prepare(res5,number_variables),"gaussian"),
model_fitting(fitting_prepare(res6,number_variables),"gaussian"),
model_fitting(fitting_prepare(res7,number_variables),"gaussian"),
model_fitting(fitting_prepare(res8,number_variables),"gaussian"),
model_fitting(fitting_prepare(res9,number_variables),"gaussian"),
model_fitting(fitting_prepare(res10,number_variables),"gaussian"))
cbind(
model_fitting(fitting_prepare(res1,number_variables),"weibull"),
model_fitting(fitting_prepare(res2,number_variables),"weibull"),
model_fitting(fitting_prepare(res3,number_variables),"weibull"),
model_fitting(fitting_prepare(res4,number_variables),"weibull"),
model_fitting(fitting_prepare(res5,number_variables),"weibull"),
model_fitting(fitting_prepare(res6,number_variables),"weibull"),
model_fitting(fitting_prepare(res7,number_variables),"weibull"),
model_fitting(fitting_prepare(res8,number_variables),"weibull"),
model_fitting(fitting_prepare(res9,number_variables),"weibull"),
model_fitting(fitting_prepare(res10,number_variables),"weibull"))
cbind(
model_fitting(fitting_prepare(res1,number_variables),"logistic"),
model_fitting(fitting_prepare(res2,number_variables),"logistic"),
model_fitting(fitting_prepare(res3,number_variables),"logistic"),
model_fitting(fitting_prepare(res4,number_variables),"logistic"),
model_fitting(fitting_prepare(res5,number_variables),"logistic"),
model_fitting(fitting_prepare(res6,number_variables),"logistic"),
model_fitting(fitting_prepare(res7,number_variables),"logistic"),
model_fitting(fitting_prepare(res8,number_variables),"logistic"),
model_fitting(fitting_prepare(res9,number_variables),"logistic"),
model_fitting(fitting_prepare(res10,number_variables),"logistic"))
score <- sapply(c(1:as.numeric(dim(s)[2])),screen_add,s=s)
res1 <- data.frame(screen=score)
mid <- 0.5*(l+r)
six <- 1/3*l + 2/3*r
third <- 2/3*l + 1/3*r
screen_ks<- function(i,y,s)
{
every = data.frame(cbind(y,as.vector(unlist(s[as.character(i)]))))
part1 = every[every$V2==0,c('y')]
part2 = every[every$V2==1,c('y')]
return (as.numeric(ks.test(part1,part2)$statistic))
}
screen_dc <- function(i,y,s)
{
return (dcor(y,as.vector(unlist(s[as.character(i)]))))}
Fk<-function(X0,x) {
Fk=c()
for (i in 1:length(x))
{ Fk[i]=sum(X0<=x[i])/length(X0) }
return(Fk)
}
Fkr<-function(X0,Y,yr,x) {
Fkr=c()
ind_yr=(Y==yr)
for (i in 1:length(x))
{ Fkr[i]=sum((X0<=x[i])*ind_yr)/sum(ind_yr) }
return(Fkr)
}
MV<-function(Xk,Y) {
Fk0 <- Fk(Xk,Xk)
Yr <- unique(Y)
MVr <- c()
for (r in 1:length(Yr)) {
MVr[r] <- (sum(Y==Yr[r])/length(Y))*mean((Fkr(Xk,Y,Yr[r],Xk)-Fk0)^2)
}
MV <- sum(MVr)
return(MV)
}
screen_mv <- function(i,s,y)
{return (abs(MV(Y=as.vector(unlist(s[as.character(i)])),Xk=y)))}
score2 = sapply(c(1:as.numeric(dim(s)[2])),screen_ks,y=third,s=s)
res2 <- data.frame(screen=score2)
score3 = sapply(c(1:as.numeric(dim(s)[2])),screen_dc,y=third,s=s)
res3 <- data.frame(screen=score3)
score4 = sapply(c(1:as.numeric(dim(s)[2])),screen_mv,y=third,s=s)
res4 <- data.frame(screen=score4)
score5 = sapply(c(1:as.numeric(dim(s)[2])),screen_ks,y=mid,s=s)
res5 <- data.frame(screen=score5)
score6 = sapply(c(1:as.numeric(dim(s)[2])),screen_dc,y=mid,s=s)
res6 <- data.frame(screen=score6)
score7 = sapply(c(1:as.numeric(dim(s)[2])),screen_mv,y=mid,s=s)
res7 <- data.frame(screen=score7)
score8 = sapply(c(1:as.numeric(dim(s)[2])),screen_ks,y=six,s=s)
res8 <- data.frame(screen=score8)
score9 = sapply(c(1:as.numeric(dim(s)[2])),screen_dc,y=six,s=s)
res9 <- data.frame(screen=score9)
score10 = sapply(c(1:as.numeric(dim(s)[2])),screen_mv,y=six,s=s)
res10 <- data.frame(screen=score10)
res_all <- as.data.frame(cbind(res1,res2,res3,res4,res5,res6,res7,res8,res9,res10))
fitting_prepare <- function(res,sub){
totno <- dim(s)[2]
ks <- data.frame(rank=totno-rank(res$screen),index=c(1:dim(s)[2]))
x <- as.matrix(s[,ks[ks$rank<sub+1,]$index])
data <- data.frame(l=l,r=r,sapply(c(1:dim(x)[2]),function(i) x[,i]))
return (data)
}
model_fitting <- function(data,dis) {
dt_tmp <- data[3:ncol(data)]
if (dis == "weibull"){
dt_tmp$l = data$l
dt_tmp$r = data$r
total <- dim(data)[2] - 2
xkk = paste("X", 1:total, sep = "",collapse="+")
model <- survreg(as.formula(paste("Surv(l,r,type='interval2')",
xkk,sep="~")),data=dt_tmp,dist=dis)
scsc <- model$loglik
ress <- c(scsc[2],2*(scsc[2]-scsc[1]))
}
else {
dt_tmp$l = log(data$l)
dt_tmp$r = log(data$r)
total <- dim(data)[2] - 3
xkk = paste("X", 1:total, sep = "",collapse="+")
model <- survreg(as.formula(paste("Surv(l,r,type='interval2')",
xkk,sep="~")),data=dt_tmp,dist=dis)
scsc <- model$loglik
ress <- c(scsc[2],2*(scsc[2]-scsc[1]))}
return (ress)
}
model_fittingtmp <- function(data,dis) {
dt_tmp <- data[3:ncol(data)]
if (dis == "weibull"){
dt_tmp$l = data$l
dt_tmp$r = data$r
total <- dim(data)[2] - 2
xkk = paste("X", 1:total, sep = "",collapse="+")
modell <- survreg(as.formula(paste("Surv(l,r,type='interval2')",
xkk,sep="~")),data=dt_tmp,dist=dis)
#scsc <- model$loglik
#ress <- c(scsc[2],2*(scsc[2]-scsc[1]))
}
else {
dt_tmp$l = log(data$l)
dt_tmp$r = log(data$r)
total <- dim(data)[2] - 3
xkk = paste("X", 1:total, sep = "",collapse="+")
modell <- survreg(as.formula(paste("Surv(l,r,type='interval2')",
xkk,sep="~")),data=dt_tmp,dist=dis)}
#scsc <- model$loglik
#ress <- c(scsc[2],2*(scsc[2]-scsc[1]))}}
return (modell)
}
#gr <- model_fittingtmp(fitting_prepare(res1,number_variables),"gaussian")
print ("gaussian")
number_variables =20
cbind(
model_fitting(fitting_prepare(res1,number_variables),"gaussian"),
model_fitting(fitting_prepare(res2,number_variables),"gaussian"),
model_fitting(fitting_prepare(res3,number_variables),"gaussian"),
model_fitting(fitting_prepare(res4,number_variables),"gaussian"),
model_fitting(fitting_prepare(res5,number_variables),"gaussian"),
model_fitting(fitting_prepare(res6,number_variables),"gaussian"),
model_fitting(fitting_prepare(res7,number_variables),"gaussian"),
model_fitting(fitting_prepare(res8,number_variables),"gaussian"),
model_fitting(fitting_prepare(res9,number_variables),"gaussian"),
model_fitting(fitting_prepare(res10,number_variables),"gaussian"))
cbind(
model_fitting(fitting_prepare(res1,number_variables),"weibull"),
model_fitting(fitting_prepare(res2,number_variables),"weibull"),
model_fitting(fitting_prepare(res3,number_variables),"weibull"),
model_fitting(fitting_prepare(res4,number_variables),"weibull"),
model_fitting(fitting_prepare(res5,number_variables),"weibull"),
model_fitting(fitting_prepare(res6,number_variables),"weibull"),
model_fitting(fitting_prepare(res7,number_variables),"weibull"),
model_fitting(fitting_prepare(res8,number_variables),"weibull"),
model_fitting(fitting_prepare(res9,number_variables),"weibull"),
model_fitting(fitting_prepare(res10,number_variables),"weibull"))
cbind(
model_fitting(fitting_prepare(res1,number_variables),"logistic"),
model_fitting(fitting_prepare(res2,number_variables),"logistic"),
model_fitting(fitting_prepare(res3,number_variables),"logistic"),
model_fitting(fitting_prepare(res4,number_variables),"logistic"),
model_fitting(fitting_prepare(res5,number_variables),"logistic"),
model_fitting(fitting_prepare(res6,number_variables),"logistic"),
model_fitting(fitting_prepare(res7,number_variables),"logistic"),
model_fitting(fitting_prepare(res8,number_variables),"logistic"),
model_fitting(fitting_prepare(res9,number_variables),"logistic"),
model_fitting(fitting_prepare(res10,number_variables),"logistic"))
fitting_prepare <- function(res,sub){
totno <- dim(s)[2]
ks <- data.frame(rank=totno-rank(res$screen),index=c(1:dim(s)[2]))
x <- as.matrix(s[,ks[ks$rank<sub+1,]$index])
data <- data.frame(l=l,r=r,sapply(c(1:dim(x)[2]),function(i) x[,i]))
return (data)
}
model_fitting <- function(data,dis) {
dt_tmp <- data[3:ncol(data)]
if (dis == "weibull"){
dt_tmp$l = data$l
dt_tmp$r = data$r
total <- dim(data)[2] - 2
xkk = paste("X", 1:total, sep = "",collapse="+")
model <- survreg(as.formula(paste("Surv(l,r,type='interval2')",
xkk,sep="~")),data=dt_tmp,dist=dis)
scsc <- model$loglik
ress <- c(scsc[2],2*(scsc[2]-scsc[1]))
}
else {
dt_tmp$l = log(data$l)
dt_tmp$r = log(data$r)
total <- dim(data)[2] - 3
xkk = paste("X", 1:total, sep = "",collapse="+")
model <- survreg(as.formula(paste("Surv(l,r,type='interval2')",
xkk,sep="~")),data=dt_tmp,dist=dis)
scsc <- model$loglik
ress <- c(scsc[2],2*(scsc[2]-scsc[1]))}
return (ress)
}
model_fittingtmp <- function(data,dis) {
dt_tmp <- data[3:ncol(data)]
if (dis == "weibull"){
dt_tmp$l = data$l
dt_tmp$r = data$r
total <- dim(data)[2] - 2
xkk = paste("X", 1:total, sep = "",collapse="+")
modell <- survreg(as.formula(paste("Surv(l,r,type='interval2')",
xkk,sep="~")),data=dt_tmp,dist=dis)
#scsc <- model$loglik
#ress <- c(scsc[2],2*(scsc[2]-scsc[1]))
}
else {
dt_tmp$l = log(data$l)
dt_tmp$r = log(data$r)
total <- dim(data)[2] - 3
xkk = paste("X", 1:total, sep = "",collapse="+")
modell <- survreg(as.formula(paste("Surv(l,r,type='interval2')",
xkk,sep="~")),data=dt_tmp,dist=dis)}
#scsc <- model$loglik
#ress <- c(scsc[2],2*(scsc[2]-scsc[1]))}}
return (modell)
}
#gr <- model_fittingtmp(fitting_prepare(res1,number_variables),"gaussian")
print ("gaussian")
number_variables =20
resGauss = as.data.frame(rbind(
model_fitting(fitting_prepare(res1,number_variables),"gaussian"),
model_fitting(fitting_prepare(res2,number_variables),"gaussian"),
model_fitting(fitting_prepare(res3,number_variables),"gaussian"),
model_fitting(fitting_prepare(res4,number_variables),"gaussian"),
model_fitting(fitting_prepare(res5,number_variables),"gaussian"),
model_fitting(fitting_prepare(res6,number_variables),"gaussian"),
model_fitting(fitting_prepare(res7,number_variables),"gaussian"),
model_fitting(fitting_prepare(res8,number_variables),"gaussian"),
model_fitting(fitting_prepare(res9,number_variables),"gaussian"),
model_fitting(fitting_prepare(res10,number_variables),"gaussian")))
row.names(resGauss) = c("ADD-SIS","KF-M1","DCSIS-M1","MVSIS-M1",
"KF-M2","DCSIS-M2","MVSIS-M2",
"KF-M3","DCSIS-M3","MVSIS-M3")
print (resGauss)
cbind(
model_fitting(fitting_prepare(res1,number_variables),"weibull"),
model_fitting(fitting_prepare(res2,number_variables),"weibull"),
model_fitting(fitting_prepare(res3,number_variables),"weibull"),
model_fitting(fitting_prepare(res4,number_variables),"weibull"),
model_fitting(fitting_prepare(res5,number_variables),"weibull"),
model_fitting(fitting_prepare(res6,number_variables),"weibull"),
model_fitting(fitting_prepare(res7,number_variables),"weibull"),
model_fitting(fitting_prepare(res8,number_variables),"weibull"),
model_fitting(fitting_prepare(res9,number_variables),"weibull"),
model_fitting(fitting_prepare(res10,number_variables),"weibull"))
cbind(
model_fitting(fitting_prepare(res1,number_variables),"logistic"),
model_fitting(fitting_prepare(res2,number_variables),"logistic"),
model_fitting(fitting_prepare(res3,number_variables),"logistic"),
model_fitting(fitting_prepare(res4,number_variables),"logistic"),
model_fitting(fitting_prepare(res5,number_variables),"logistic"),
model_fitting(fitting_prepare(res6,number_variables),"logistic"),
model_fitting(fitting_prepare(res7,number_variables),"logistic"),
model_fitting(fitting_prepare(res8,number_variables),"logistic"),
model_fitting(fitting_prepare(res9,number_variables),"logistic"),
model_fitting(fitting_prepare(res10,number_variables),"logistic"))
print ("gaussian")
number_variables =20
resGauss = as.data.frame(rbind(
model_fitting(fitting_prepare(res1,number_variables),"gaussian"),
model_fitting(fitting_prepare(res2,number_variables),"gaussian"),
model_fitting(fitting_prepare(res3,number_variables),"gaussian"),
model_fitting(fitting_prepare(res4,number_variables),"gaussian"),
model_fitting(fitting_prepare(res5,number_variables),"gaussian"),
model_fitting(fitting_prepare(res6,number_variables),"gaussian"),
model_fitting(fitting_prepare(res7,number_variables),"gaussian"),
model_fitting(fitting_prepare(res8,number_variables),"gaussian"),
model_fitting(fitting_prepare(res9,number_variables),"gaussian"),
model_fitting(fitting_prepare(res10,number_variables),"gaussian")))
row.names(resGauss) = c("ADD-SIS","KF-M1","DCSIS-M1","MVSIS-M1",
"KF-M2","DCSIS-M2","MVSIS-M2",
"KF-M3","DCSIS-M3","MVSIS-M3")
print (resGauss)
resWeibull = as.data.frame(rbind(
model_fitting(fitting_prepare(res1,number_variables),"weibull"),
model_fitting(fitting_prepare(res2,number_variables),"weibull"),
model_fitting(fitting_prepare(res3,number_variables),"weibull"),
model_fitting(fitting_prepare(res4,number_variables),"weibull"),
model_fitting(fitting_prepare(res5,number_variables),"weibull"),
model_fitting(fitting_prepare(res6,number_variables),"weibull"),
model_fitting(fitting_prepare(res7,number_variables),"weibull"),
model_fitting(fitting_prepare(res8,number_variables),"weibull"),
model_fitting(fitting_prepare(res9,number_variables),"weibull"),
model_fitting(fitting_prepare(res10,number_variables),"weibull")))
row.names(resWeibull) = c("ADD-SIS","KF-M1","DCSIS-M1","MVSIS-M1",
"KF-M2","DCSIS-M2","MVSIS-M2",
"KF-M3","DCSIS-M3","MVSIS-M3")
print (resWeibull)
resLogistic = as.data.framerbind(
model_fitting(fitting_prepare(res1,number_variables),"logistic"),
model_fitting(fitting_prepare(res2,number_variables),"logistic"),
model_fitting(fitting_prepare(res3,number_variables),"logistic"),
model_fitting(fitting_prepare(res4,number_variables),"logistic"),
model_fitting(fitting_prepare(res5,number_variables),"logistic"),
model_fitting(fitting_prepare(res6,number_variables),"logistic"),
model_fitting(fitting_prepare(res7,number_variables),"logistic"),
model_fitting(fitting_prepare(res8,number_variables),"logistic"),
model_fitting(fitting_prepare(res9,number_variables),"logistic"),
model_fitting(fitting_prepare(res10,number_variables),"logistic")))
resLogistic = as.data.frame(rbind(
model_fitting(fitting_prepare(res1,number_variables),"logistic"),
model_fitting(fitting_prepare(res2,number_variables),"logistic"),
model_fitting(fitting_prepare(res3,number_variables),"logistic"),
model_fitting(fitting_prepare(res4,number_variables),"logistic"),
model_fitting(fitting_prepare(res5,number_variables),"logistic"),
model_fitting(fitting_prepare(res6,number_variables),"logistic"),
model_fitting(fitting_prepare(res7,number_variables),"logistic"),
model_fitting(fitting_prepare(res8,number_variables),"logistic"),
model_fitting(fitting_prepare(res9,number_variables),"logistic"),
model_fitting(fitting_prepare(res10,number_variables),"logistic")))
row.names(resLogistic) = c("ADD-SIS","KF-M1","DCSIS-M1","MVSIS-M1",
"KF-M2","DCSIS-M2","MVSIS-M2",
"KF-M3","DCSIS-M3","MVSIS-M3")
print (resLogistic)
